// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Definición del modelo para la tabla "tourists"
model Tourist {
  id               Int              @id @default(autoincrement())
  name             String
  password         String
  email            String           @unique
  created_date     DateTime         @default(now())
  updated_date     DateTime         @updatedAt
  favorite_animals FavoriteAnimal[]
  seen_animals     SeenAnimal[]
}

// Definición del modelo para la tabla "favorite_animals"
model FavoriteAnimal {
  id            Int      @id @default(autoincrement())
  creation_date DateTime @default(now())
  tourist       Tourist  @relation(fields: [touristId], references: [id])
  touristId     Int
  animal        Animal   @relation(fields: [animalId], references: [id])
  animalId      Int
}

// Definición del modelo para la tabla "seen_animals"
model SeenAnimal {
  id            Int      @id @default(autoincrement())
  creation_date DateTime @default(now())
  tourist       Tourist  @relation(fields: [touristId], references: [id])
  touristId     Int
  animal        Animal   @relation(fields: [animalId], references: [id])
  animalId      Int
}

// Definición del modelo para la tabla "animals"
model Animal {
  id               Int              @id @default(autoincrement())
  name             String
  description      String
  in_danger        Boolean
  images           String[]
  spot             Spot?            @relation(fields: [spotId], references: [id])
  spotId           Int?
  // Agrega el campo de relación inversa en el modelo Animal
  favorite_animals FavoriteAnimal[]
  seen_animals     SeenAnimal[]
}

// Definición del modelo para la tabla "spots"
model Spot {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  latitude    Float
  longitude   Float
  // Agrega el campo de relación inversa en el modelo Spot
  animals     Animal[]
}
